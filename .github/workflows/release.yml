name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for git describe to work

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Get version from git
        id: version
        run: |
          VERSION=$(git describe --tags --exact-match HEAD 2>/dev/null || git describe --tags --always --dirty=-SNAPSHOT)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Build and test
        run: ./gradlew build

      - name: Build shadow JAR
        run: ./gradlew shadowJar

      - name: Get JAR filename
        id: jar
        run: |
          JAR_FILE=$(find app/build/libs -name "brokk-*.jar" | head -1)
          JAR_NAME=$(basename "$JAR_FILE")
          echo "jar_file=$JAR_FILE" >> $GITHUB_OUTPUT
          echo "jar_name=$JAR_NAME" >> $GITHUB_OUTPUT
          echo "Found JAR: $JAR_NAME"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.jar.outputs.jar_file }}
          asset_name: ${{ steps.jar.outputs.jar_name }}
          asset_content_type: application/java-archive

      - name: Update JBang catalog
        run: |
          ./scripts/update-jbang-catalog.sh "${{ steps.version.outputs.version }}"

      - name: Commit and push catalog update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add jbang-catalog.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update JBang catalog for release ${{ steps.version.outputs.version }}"
            git push origin HEAD:master
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: brokk-${{ steps.version.outputs.version }}
          path: |
            app/build/libs/*.jar
            !app/build/libs/*-sources.jar
            !app/build/libs/*-javadoc.jar
          retention-days: 90
